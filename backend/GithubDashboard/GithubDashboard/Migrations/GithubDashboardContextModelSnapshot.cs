// <auto-generated />
using System;
using GithubDashboard.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GithubDashboard.Migrations
{
    [DbContext(typeof(GithubDashboardContext))]
    partial class GithubDashboardContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GithubDashboard.Models.Issue", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("assignee");

                    b.Property<string>("body");

                    b.Property<DateTime?>("closed_at");

                    b.Property<DateTime>("created_at");

                    b.Property<int>("number");

                    b.Property<string>("state");

                    b.Property<string>("title");

                    b.Property<string>("user_login");

                    b.HasKey("id");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("GithubDashboard.Models.Profile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("avatar_url");

                    b.Property<string>("bio");

                    b.Property<string>("blog");

                    b.Property<string>("company");

                    b.Property<string>("email");

                    b.Property<int>("followers");

                    b.Property<int>("following");

                    b.Property<string>("html_url");

                    b.Property<string>("location");

                    b.Property<string>("login");

                    b.Property<string>("name");

                    b.HasKey("id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("GithubDashboard.Models.Pull", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("body");

                    b.Property<DateTime?>("closed_at");

                    b.Property<DateTime>("created_at");

                    b.Property<string>("html_url");

                    b.Property<int>("number");

                    b.Property<string>("state");

                    b.Property<string>("title");

                    b.Property<DateTime>("updated_at");

                    b.Property<string>("user_login");

                    b.HasKey("id");

                    b.ToTable("Pulls");
                });

            modelBuilder.Entity("GithubDashboard.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
